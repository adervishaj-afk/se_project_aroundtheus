!function(){"use strict";class e{constructor(e,t,o,r,s){let{name:n,link:a,_id:i}=e;this._name=n,this._link=a,this._id=i,this._cardSelector=t,this._handleImageClick=o,this._handleDeleteButton=r,this._handleLike=s}_setEventListeners(){this._cardElement.querySelector("#element-like-button").addEventListener("click",(()=>{this._handleLike(this._cardElement,{id:this._id})})),this._cardElement.querySelector("#element-trash-button").addEventListener("click",(()=>{this._handleDeleteButton(this._cardElement,{id:this._id})})),this._cardElement.querySelector("#el-card-image").addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0),this._cardElement.querySelector("#el-card-image").src=this._link,this._cardElement.querySelector("#el-card-image").alt=this._name,this._cardElement.querySelector("#el-card-title").textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector))}_showInputError(e,t){const o=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),o.textContent=t,o.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_toggleButtonState(){this._inputList.every((e=>e.validity.valid))?this._enableSubmitButton():this.disableSubmitButton()}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._buttonElement)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}disableSubmitButton=()=>{this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0};_enableSubmitButton=()=>{this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled")}}class o{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeByEscape=this._closeByEscape.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._closeByEscape)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._closeByEscape)}_closeByEscape(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.close()}))}}class r extends o{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__form-input"),this._handleFormSubmit=t}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popupForm.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues()),super.close()})),super.setEventListeners()}}const s=document.querySelector("#profile-edit-modal"),n=document.querySelector("#profile-add-modal"),a=document.querySelector("#element-popout-modal"),i={editModalProfileSaveButton:document.querySelector("#edit-profile-modal-save-button"),avatarModalSaveButton:document.querySelector("#avatar-modal-save-button"),confirmButton:document.querySelector("#confirm-delete"),avatarModalForm:document.querySelector("#modal-change-avatar-form"),avatarIcon:document.querySelector("#user-avatar"),profileEditButton:document.querySelector("#profile-edit-button"),profileCloseEditButton:document.querySelector("#profile-close-edit-button"),profileInfoTitle:document.querySelector("#profile-info-title"),profileInfoDescription:document.querySelector("#profile-info-description"),profileModalNameInput:document.querySelector("#profile-edit-modal-title"),profileModalDescriptionInput:document.querySelector("#profile-edit-modal-description"),profileEditModalForm:s.querySelector("#modal-profile-edit-form"),addButton:document.querySelector("#profile-add-button"),closeAddButton:document.querySelector("#profile-close-add-button"),addModalForm:n.querySelector("#modal-profile-add-form"),addTitleInput:document.querySelector("#profile-modal-add-title"),addUrlInput:document.querySelector("#profile-modal-add-URL"),cardList:document.querySelector("#el-card-list"),modalImage:document.querySelector("#modal-image"),modalTitle:document.querySelector("#modal-text"),imageCloseButton:a.querySelector("#element-close-popout-button")},l={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},d=new class{constructor(e){this.baseUrl=e.baseUrl,this.headers=e.headers}async fetchAPI(e,t){return fetch(e,t).then((e=>e.ok?(console.log(e),e.json()):Promise.reject(`HTTP error! Status: ${e.status}`)))}getUserInfo(){return this.fetchAPI(`${this.baseUrl}/users/me`,{method:"GET",headers:this.headers})}updateUserProfile(e){let{name:t,about:o}=e;return this.fetchAPI(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:t,about:o})})}updateUserAvatar(e){let{avatar:t}=e;return this.fetchAPI(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:t})})}getInitialCards(){return this.fetchAPI(`${this.baseUrl}/cards`,{method:"GET",headers:this.headers})}createCard(e){let{name:t,link:o}=e;return this.fetchAPI(`${this.baseUrl}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify({name:t,link:o})})}deleteCard(e){return this.fetchAPI(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this.headers})}likeCard=e=>this.fetchAPI(`${this.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this.headers});unlikeCard=e=>this.fetchAPI(`${this.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this.headers})}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{Authorization:"44ea7345-0378-4698-8841-25c6e07018e7","Content-Type":"application/json"}}),c=new class{constructor(e){let{nameSelector:t,jobSelector:o,avatarSelector:r}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(o),this._avatarIcon=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent,avatar:this._avatarIcon.src}}setUserInfo(e){let{name:t,job:o,avatar:r}=e;t&&(this._nameElement.textContent=t),o&&(this._jobElement.textContent=o),r&&(this._avatarIcon.src=r)}}({nameSelector:"#profile-info-title",jobSelector:"#profile-info-description",avatarSelector:"#user-avatar"});d.getUserInfo().then((e=>{c.setUserInfo({name:e.name,job:e.about,avatar:e.avatar}),console.log("User information loaded and displayed successfully.")})).catch((e=>{console.error("Failed to load user information:",e)}));const u=new r("#profile-edit-modal",(e=>{i.editModalProfileSaveButton.textContent="Saving...",d.updateUserProfile({name:e.title,about:e.description}).then((()=>{i.editModalProfileSaveButton.textContent="Save",c.setUserInfo({name:e.title,job:e.description})}))}));function m(t){const o=new e(t,"#elementCard",S,_,h);y.addItem(o.getView())}i.profileEditButton.addEventListener("click",(()=>{const e=c.getUserInfo();i.profileModalNameInput.value=e.name.trim(),i.profileModalDescriptionInput.value=e.job.trim(),u.open()})),u.setEventListeners(),d.getInitialCards().then((e=>(console.log("Cards fetched and rendered successfully."),function(e){e.forEach((e=>{m(e)}))}(e),e))).catch((e=>{console.error("Failed to fetch cards:",e)}));const h=(e,t)=>{e.querySelector("#element-like-button").classList.toggle("element__like-button_active"),e.querySelector("#element-like-button").classList.contains("element__like-button_active")?d.likeCard(t.id).then((()=>console.log("Card liked successfully."))):d.unlikeCard(t.id).then((()=>console.log("Card disliked successfully.")))},p=new o({popupSelector:"#delete-card-modal"}),_=(e,t)=>{p.setEventListeners(),p.open(),i.confirmButton.addEventListener("click",(()=>{d.deleteCard(t.id),e.remove(),p.close()}),{once:!0})},f=new class extends o{constructor(e){super({popupSelector:e}),this._modalImage=this._popupElement.querySelector("#modal-image"),this._modalTitle=this._popupElement.querySelector("#modal-text")}open(e){let{name:t,link:o}=e;this._modalImage.src=o,this._modalImage.alt=`Image of ${t}`,this._modalTitle.textContent=t,super.open()}}("#element-popout-modal"),S=e=>{f.open(e)};f.setEventListeners(),new t(l,i.profileEditModalForm).enableValidation();const v=new t(l,i.addModalForm);v.enableValidation(),new t(l,i.avatarModalForm).enableValidation();const E=new r("#profile-add-modal",(e=>{let{title:t,link:o}=e;var r;r={name:t,link:o},d.createCard(r).then((e=>{m(e)})).then(console.log("Card created and rendered successfully.")).catch((e=>{console.error("Failed to create card:",e)})),i.addModalForm.reset(),v.disableSubmitButton()}));E.setEventListeners(),i.addButton.addEventListener("click",(()=>{E.open()}));const b=new r("#edit-avatar",(e=>{let{link:t}=e;i.avatarModalSaveButton.textContent="Saving...",d.updateUserAvatar({avatar:t}).then((e=>{i.pavatarModalSaveButton.textContent="Save",console.log("Profile data saved successfully:",e)})),i.avatarModalForm.reset(),v.disableSubmitButton()}));b.setEventListeners(),i.avatarIcon.addEventListener("click",(()=>{b.open()}));const y=new class{constructor(e){this._cardList=document.querySelector(e)}addItem(e){this._cardList.prepend(e)}}("#el-card-list")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,